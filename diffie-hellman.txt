
                  Алгоритм Diffie-Hellman'a 

Let's say that you need to exchange a secret code with your friend. But the data which we send, is visible to intermediaries. You want to exchange the secret code so that no one in the middle recognizes him. The Diffie-Hellman algorithm can help you with this!


Here the numbers will be small, but in reality you need to take large numbers - with the number of characters on the entire page.
First, we need to come up with an x, with which we will carry out further operations.
For example, x=5

Well, we’re sending a friend number 5. But it's not a secret number, because we tell it to intermediaries (e.g. our Internet Provider). We can use commutativity (this is when the order of operations doesn’t matter): both you and your friend need to guess numbers m and n. And after that raise the number 5 to power m. And your friend raises 5 to power n. For example, m = 3 and n = 4. We get numbers 125 (you) and 625 (your friend). 
Now, let's exchange these numbers and raise these exchanged numbers to your power again. You get 6253 = 244140625, and your friend gets 1254, and it’s also 244140625. This happens because of commutativity: (nx)y=(ny)x
But an intermediary (e.g. internet provider), if he wants, uses a logarithm to figure out what power you have. He knows the original number (5), also he knows the result of exponentiation (125). Using logarithm he can calculate power himself. Having learned both exponents, he can reproduce the steps and find out the secret number. We need to add something else for additional protection.
We introduce modular arithmetic. For example, we share a module - 7. Better if we take it after each arithmetic operation. 125 mod 7 = 6. 625 mod 7 it's 2. Exchange these numbers, and raise them to the respective powers. You have 2³=8, and your friend has 6⁴ = 1296. Again use modular arithmetic.  We get 1 and 1. This number (1) is a secret number, which we wanted to exchange without the knowledge of the intermediary at the beginning! But to completely confuse the intermediary, you can use a prime number as a modulus. Why? Well, let's take an example with a composite number:
 ((29 mod 10) × 5) mod 10 = 5
((30 mod 10) × 5) mod 10 = 0
((31 mod 10) × 5) mod 10 = 5
((32 mod 10) × 5) mod 10 = 0
You can see that this cycle keeps repeating. This means that this does not suit us, because the number of possible secrets is small, and the adversary can try each of them until the right one is found.
If the modulus and the number we are dividing do not have common divisors, then:
((29 mod 11) × 5) mod 11 = 2
((30 mod 11)× 5) mod 11= 7
((31 mod 11)× 5)mod 11 = 1
((32 mod 11)× 5) mod 11 = 6
((33 mod 11) × 5)  mod 11=0
((34 mod 11)× 5) mod 11= 5
 ((35 mod 11)× 5) mod 11= 10
((36 mod 11)× 5) mod 11= 4
((37 mod 11)× 5) mod 11= 9
((38 mod 11)× 5) mod 11= 3
((39 mod 11)× 5) mod 11= 8
…
And so on ad infinitum. Well, everything is clear here, because you can count as much as you like.

